package it.unisannio.rosariogoglia.controller;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.tomcat.util.http.fileupload.IOUtils;
import org.json.JSONException;
import org.json.JSONObject;

import it.unisannio.rosariogoglia.dao.ExploitDAO;
import it.unisannio.rosariogoglia.dao.MalwareSignatureDAO;
import it.unisannio.rosariogoglia.model.Exploit;
import it.unisannio.rosariogoglia.model.MalwareSignature;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

/**
 * Servlet implementation class ServletCreateExe
 */
@WebServlet("/ServletCreateExe")
public class ServletCreateExe extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public ServletCreateExe() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

		//RICEVERE IN INPUT IL NOME DEI 2 FILE.EXE DA UNIRE CHE DEVONO RISIEDERE NELLA CARTELLA WEB DELL APP
		System.out.println("SONO IN CREATE EXE");
		
		
		//RICEVO L'ID DELL'EXPLOIT SCELTO
		String idExploitString = request.getParameter("exploit");
		Integer idExploit = null;
		if(!idExploitString.equals("Select Exploit")) {
			idExploit = Integer.parseInt(idExploitString);
		}
		System.out.println("ID EXPLOIT SCELTO: " + idExploit);
		
		//RICEVO L'ID DELLA SIGNATURE SCELTA
		String idSignatureString = request.getParameter("signature");
		Integer idSignature = null;
		if(!idSignatureString.equals("Select Signature")) {
			idSignature = Integer.parseInt(idSignatureString);
		}		
		System.out.println("ID SIGNATURE SCELTO: " + idSignature);
		
		
		//**************
		//SE NON SONO STATI SCELTI GLI ID, GESTIRE LA CSA INVIANDO UN MESSAGGIO DI ERRORE
		
		
		
		
		//CON L'OGGETTO DAO, PRELEVIAMO DAL DB GLI OGGETTI EXPLOIT E SIGNATURE DA UNIRE
		ExploitDAO eDAO = new ExploitDAO();
		MalwareSignatureDAO msDAO = new MalwareSignatureDAO();
		
		Exploit exploit = eDAO.getExploitById(idExploit);
		MalwareSignature signature = msDAO.getMalwareSignatureById(idSignature);
			
		
		
		
		String target = signature.getPathSignature();
		//IL PAYLOAD DEVE SEMPRE ESSERE LA VULNERABILITA'
		String payload = exploit.getPathFile();
		
		System.out.println("target: " + target);
		System.out.println("payload: " + payload);

		
		System.out.println("STO PER LANCIARE PYTHON");
		
		//String command = "python C:\\Users\\rosar\\apache-tomcat-9.0.27ECLIPSE\\webapps\\MalwareXPlatform\\injector.py -t C:\\Users\\rosar\\apache-tomcat-9.0.27ECLIPSE\\webapps\\MalwareXPlatform" + target + " -p C:\\Users\\rosar\\apache-tomcat-9.0.27ECLIPSE\\webapps\\MalwareXPlatform" + payload ;
		String command = "python C:\\Users\\rosar\\git\\MalwareXPlatform\\MalwareXPlatform\\src\\main\\webapp\\injector.py -p C:\\Users\\rosar\\git\\MalwareXPlatform\\MalwareXPlatform\\src\\main\\webapp\\zzz_exploit_FINAL3.exe -t C:\\Users\\rosar\\git\\MalwareXPlatform\\MalwareXPlatform\\src\\main\\webapp\\marcopollo3.exe" ;
		
		
		
		//String command = "python C:\\Users\\rosar\\workspaceEsercitazioniASSD\\TestPython\\injector.py -t C:\\Users\\rosar\\workspaceEsercitazioniASSD\\TestPython\\marcopollo3.exe -p C:\\Users\\rosar\\workspaceEsercitazioniASSD\\TestPython\\zzz_exploit_FINAL3.exe";
		
		Process p = Runtime.getRuntime().exec(command);
		System.out.println(p.toString());
		//CAPIRE DOVE VIENE CREATO IL FILE (secondo me in webapp)
	    
		
		
		
		
		
		
		/*	BufferedReader in = new BufferedReader(new InputStreamReader(p.getInputStream()));
		String ret = in.readLine();
		System.out.println("value is : "+ret);
		
		System.out.println(p);
		// ProcessBuilder pb = new ProcessBuilder("python","test1.py",""+number1,""+number2);
		// Process p = pb.start();
	*/	
		
		
		
		
		// INVIARE ALLA SERVLET L'URL DELLA RISORSA CREATA
		String urlResource = target + "_mod.exe";
		
		
		
		String urlEXE = null;
		String messaggio = null;
		String result = "{\"url\":"+urlEXE+",\"messaggio\":\"" +messaggio+ "\"}";
		
		JSONObject m = null;
		try {
			 m = new JSONObject(result);
			System.out.println("mess: " +m.toString());
		} catch (JSONException e) {
			e.printStackTrace();
		}
		response.setContentType("text/plain");
		response.setCharacterEncoding("UTF-8");
		response.getWriter().write(m.toString());
		
		
		
		//response.getWriter().append("Served at: ").append(request.getContextPath());
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
