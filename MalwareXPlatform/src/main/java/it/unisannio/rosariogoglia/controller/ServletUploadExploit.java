package it.unisannio.rosariogoglia.controller;

import java.io.IOException;
import java.util.List;
import java.io.File;
import java.util.Date;
import java.io.InputStream;
import java.io.FileInputStream;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.FileUploadException;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;


import org.apache.log4j.Logger;
//import org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload;
import org.json.JSONException;
import org.json.JSONObject;

import it.unisannio.rosariogoglia.dao.ExploitDAO;
import it.unisannio.rosariogoglia.model.Exploit;


/**
 * Servlet implementation class ServletUploadFile
 */
@WebServlet("/ServletUploadExploit")
public class ServletUploadExploit extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
	Logger logger = Logger.getLogger(ServletUploadExploit.class); 
	
    /**
     * @see HttpServlet#HttpServlet()
     */
    public ServletUploadExploit() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		String nomeCampoForm = "";
		String valoreCampoForm = "";
		String nomeFile = ""; //indica il path+nome del file caricato
		String nameExploit = null; //indica il nome dell'exploit scelto dall'utente
		String messaggio = "";
		File fin = null;
		Exploit fileExploit = null;
		boolean prosegui = false;
		
		//FARE IL CONTROLLO SULL'OPERAZIONE: SE VIENE CARICATO L'EXPLOIT O LA SINGATURE
		System.out.println("IN ServletUploadFile");
         
        
        /* Analizzo la richiesta per definirne il contentType */
		boolean isMultipart = ServletFileUpload.isMultipartContent(request);
		
		logger.debug("multipart è: " +isMultipart);
        
        
		/* Verifico che il type della richiesta sia MULTIPART/FORM-DATA */
		if(isMultipart){
			
			
		/*	try {
				List multiparts = new ServletFileUpload(new DiskFileItemFactory()).parseRequest(request);
			    System.out.println("MULTIPARTS SIZE: " + multiparts.size());
			} catch (FileUploadException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		*/	
			logger.debug("è  multipart");
			
			/* 
			 * Definisco un factory di tipo Disk per la creazione di oggetti FileItem
			 * Tale factory mantiene in memoria i FileItem di dimensioni minori di 10KB, per FileItem più grandi li memorizza nella directory temporanea del sistema.
			 */
			DiskFileItemFactory factory = new DiskFileItemFactory();
			/* L'oggetto upload permette di analizzare la richiesta e elaborare l'elenco di elementi dell'applicazione */
			ServletFileUpload upload = new ServletFileUpload(factory);	
				
			try {
				/* Analizzo la richiesta e elaboro la lista di elementi in essa contenuti */
				List<FileItem> itemList = upload.parseRequest(request);
				
				logger.debug("creiamo la lista item");
				
				System.out.println("size item: " + itemList.size());
				
				for(int i=0; i<itemList.size(); i++){
					FileItem item = itemList.get(i);
					
					logger.debug("scorriamo ogni elemento");
										
					/* 
					 * Verifico se il FileItem corrente è un campo di un FORM html oppure è un elemento diverso:
					 * Se è un campo FORM prelevo le proprietà nome e valore del campo;
					 * altrimenti gestisco l'elemento file scrivendone il contenuto nella directory specificata.
					 */
					if(item.isFormField()){
						
						
						logger.debug("è un FORM FIELD");
						
						nomeCampoForm = item.getFieldName(); //corrispondente all'attributo name=" " del form
						valoreCampoForm = item.getString(); //corrispondente al valore inserito dall' utente nel form
							
						
						System.out.println("NOME CAMPO FORM: " + nomeCampoForm);
						System.out.println("VALORE CAMPO FORM: " + valoreCampoForm);
						
						if(nomeCampoForm.equals("exploitname")) {
							
							nameExploit = valoreCampoForm;
							System.out.println("nome: "+ nameExploit);
							
						}
						
					}
					else{
						
						logger.debug("E' UN FILE");
						
						nomeFile = item.getName(); //corrispondente al nome del File
						
						logger.debug("nome file: " + nomeFile);
						
						long dimensioneInBytes = item.getSize(); //corrispondente alla dimensione del File		
						
						logger.debug("dimensione file: " + dimensioneInBytes);
													
						logger.debug("Creo un nuovo file nella directory specificata con il nome del file inserito nel form ");
						
						
						
						//SE SCELGO DI CONVERTIRE I PY IN EXE, DEVO SALVARE TUTTI I FILE GIà EXE CARICATI NELLA CARTELLA dist, PERCHè PYINSTALLER CREA GLI EXE IN dist
										
						
						//fare un if dove verifico se il file caricato è un exe o un py, se è un exe lo salvo direttamente cosi: //fin=new File( getServletContext().getRealPath("/dist"), nomeFile);
						//se è un py devo salvarlo così: fin=new File( getServletContext().getRealPath(""), nomeFile); e poi chiamare pyinstaller per creare l'exe in dist
						
						fin=new File( getServletContext().getRealPath("\\dist\\"), nomeFile); 
							
						try {
							
							//IL FILE VIENE SCRITTO NEL FYLESYSTEM LOCALE
							item.write(fin); //serve per salvare la foto nella cartella immagini/inserzioni dell'app deployata in tomcat
						    	
								//*******************
								//CONTROLLARE IL FORMATO DEL FILE E DECIDERE SE CONVERTIRLO IN EXE (SE è UN PYTHON)
								//OPPURE ACCETTARE SOLO EXE E SOLLEVARE L'ERRORE
							
							
							//SE CONVERTO IL FILE IN EXE BISOGNA CANCELLARE IL PY CREATO
							//pyinstaller crea il file.exe in una cartella dist
							String pathFile = "dist\\"+nomeFile;
								
							//CREARE L'ELEMENTO EXPLOIT MODEL IN MODO DA POTERLO POI INSERIRE NEL DB
							fileExploit = new Exploit();
							fileExploit.setExploit(nameExploit);
							fileExploit.setPathFile(pathFile);
							fileExploit.setFileEXE(fin); //INSERISCO ANCHE IL FILE BINARIO
															
							prosegui=true;
								
						}catch (Exception e) {
								logger.error(e);
							    logger.warn(new Date()+" Scrittura file "+nomeFile+" non eseguita correttamente !!!");
								messaggio="Errore inserimento file Exploit!!!";
								prosegui=false;
						}				
					}
				}
				
				
				
			} catch (FileUploadException e) {
				logger.warn(new Date()+" Inserimento file Exploit non eseguito correttamente !!!");
				messaggio="Errore inserimenro file !!!";
				prosegui=false;
			} catch (Exception e) {
				
				e.printStackTrace();
			}	
						
		}
		
		boolean resultF = false;
		
	//	SE prosegui è TRUE ALLORA FACCIO L'INSERIMENTO DEL FILE NEL DATABASE CREANDO L'OGGETTO EXPLOIT
		if(prosegui) {
					
			
			int idExploit = -1;
			ExploitDAO exDAO = new ExploitDAO();
			idExploit = exDAO.insertExploit(fileExploit);
			idExploit = 57;
			if(idExploit != -1) {
				
			    messaggio = "Exploit n° "+ fileExploit.getIdExploit() + " - " + fileExploit.getPathFile().replace("\\", "\\\\") + " creato correttamente!";
				logger.info(new Date()+" "+messaggio);
				resultF = true;
				
				
			}
			else {
				messaggio = "Exploit " + fileExploit.getExploit() + "non creato correttamente!";
				logger.info(new Date()+" "+messaggio);
				resultF = false;
			}		
			
		}
		
		
		String result = "{\"result\":"+resultF+",\"messaggio\":\"" +messaggio+ "\",\"redirect_url\":\"dashboard.html\"}";
		
		    	
    	System.out.println("result: " + result);
    		
    	JSONObject m = null;
    	try {
    		m = new JSONObject(result);
    		System.out.println("mess: " +m.toString());
    	} catch (JSONException e) {
    		e.printStackTrace();
    	}
    		
    	System.out.println("invio: " + m.toString());
    		
    	response.setContentType("text/plain");
    	response.setCharacterEncoding("UTF-8");
    	response.getWriter().write(m.toString());	
        }
//	}
		
	

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
